<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x_vel = 0;
y_vel = 0;
plr_spd = 2;
timer = 0;
state = "IDLE";
anim_spd = 0.125;
direction = 270;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(state)
{
    case "IDLE":
    {
        image_speed = 0;
        x_vel = 0;
        y_vel = 0;
        scr_check_input();
        break;
    }
    case "LEFT":
    {
        image_speed = anim_spd;
        sprite_index = spr_player_side;
        image_xscale = -1;
        direction = 180;
        x_vel = -1 * plr_spd;
        y_vel = 0;
        scr_check_input();
        break;
    }
    case "RIGHT":
    {
        image_speed = anim_spd;
        sprite_index = spr_player_side;
        image_xscale = 1;
        direction = 0;
        x_vel = 1 * plr_spd;
        y_vel = 0;
        scr_check_input();
        break;
    }
    case "UP":
    {
        image_speed = anim_spd;
        sprite_index = spr_player_up;
        image_xscale = 1;
        direction = 90;
        x_vel = 0;
        y_vel = -1 * plr_spd;
        scr_check_input();
        break;
    }
    case "DOWN":
    {
        image_speed = anim_spd;
        sprite_index = spr_player_down;
        image_xscale = 1;
        direction = 270;
        x_vel = 0;
        y_vel = plr_spd;
        scr_check_input();
        break;
    }
}

repeat(abs(x_vel))
{
    if(!place_meeting(x + sign(x_vel), y, obj_solid)) 
    {
        x += sign(x_vel);
    }
    else 
    {
        break;
    }
}

repeat(abs(y_vel))
{
    if(!place_meeting(x, y + sign(y_vel), obj_solid)) 
    {
        y += sign(y_vel);
    }
    else 
    {
        break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>14,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
